name: Deploy Gatus to Google Cloud Run

on:
  push:
    branches: ["main"]
    paths:
      - 'endpoints/**'
  workflow_dispatch: # Allows manual runs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation (passwordless auth)

    steps:
      - name: Checkout Config Repo
        uses: actions/checkout@v4

      - name: Install yq (YAML Processor)
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      # Aggregate all endpoint snippets into a single config.yaml
      - name: Aggregate Config Snippets
        run: |
          yq eval-all 'select(fileIndex == 0) *+ {"endpoints": .endpoints} | .endpoints += select(fileIndex > 0).endpoints' gatus-base-config.yml endpoints/*.yml > config.yaml
          echo "--- Generated Gatus Config ---"
          cat config.yaml

      # Authenticate to Google Cloud without a password
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Build and Push Docker Image to Google Artifact Registry
      - name: Build and Push Docker Image
        run: |
         
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gatus-cedille/gatus-app:${{ github.sha }}
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gatus-cedille/gatus-app:${{ github.sha }}

      #  Deploy the new image to Google Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy gatus-dashboard-cedille \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gatus-cedille/gatus-app:${{ github.sha }} \
            --region=northamerica-northeast1 \
            --platform=managed \
            --allow-unauthenticated \
            \
            --max-instances=1 \
            \
            --volume name=gatus-db,gcs,bucket=${{ secrets.GCP_BUCKET_NAME }} \
            \
            --mount-volume name=gatus-db,mount-path=/data